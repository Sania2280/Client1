// qml/components/CountrySelector.qml
import QtQuick 2.15
import QtQuick.Controls 2.15

Item {
    id: root
    width: parent.width
    height: 55

    property string selectedCountryCode: "+380"
    property string selectedFlag: "qrc:/new/prefix1/images/640px-Flag_of_Ukraine.svg.png"
    property string selectedCountryName: "Ukraine"

    signal countryChanged(string code, string flag)

    Row {
        spacing: 16  // üî• –ë–æ–ª—å—à–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞ –º–µ–∂–¥—É —Ñ–ª–∞–≥–æ–º –∏ ComboBox
        anchors.verticalCenter: parent.verticalCenter

        // üî• –£–≤–µ–ª–∏—á–µ–Ω–Ω—ã–π —Ñ–ª–∞–≥ —Å —Ç–µ–Ω—å—é
        Rectangle {
            width: 60  // ‚¨Ü –£–≤–µ–ª–∏—á–µ–Ω–Ω—ã–π —Ä–∞–∑–º–µ—Ä
            height: 40
            radius: 3
            color: "transparent"
            border.color: "#ddd"
            border.width: 1

            Image {
                id: countryFlag
                source: root.selectedFlag
                anchors.centerIn: parent
                width: parent.width * 0.9
                height: parent.height * 0.9
                fillMode: Image.PreserveAspectFit
            }

            // üåü –õ–µ–≥–∫–∞—è —Ç–µ–Ω—å
            Rectangle {
                anchors.fill: parent
                color: "black"
                opacity: 0.1
                radius: 3
                z: -1
                anchors.horizontalCenterOffset: 2
                anchors.verticalCenterOffset: 2
            }
        }

        // üåü ComboBox –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å—Ç—Ä–∞–Ω—ã
        ComboBox {
            id: countryComboBox
            width: root.width - 80
            height: 40  // üî• –°–¥–µ–ª–∞–ª–∏ –≤—ã—à–µ –¥–ª—è –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏—è
            model: [
                { name: " Ukraine", code: "+380", flag: "qrc:/new/prefix1/images/640px-Flag_of_Ukraine.svg.png" },
                { name: " Germany", code: "+49", flag: "qrc:/new/prefix1/images/Flag_of_Germany.svg" },
                { name: " Poland", code: "+48", flag: "qrc:/new/prefix1/images/Flag_of_Poland.svg.webp" }
            ]
            textRole: "name"
            contentItem: Text {
                text: countryComboBox.displayText
                font.pixelSize: 16
                verticalAlignment: Text.AlignVCenter
                color: "#000"
            }

            // üåü –ë–æ–ª–µ–µ –∫–æ–Ω—Ç—Ä–∞—Å—Ç–Ω—ã–π —Ñ–æ–Ω
            background: Rectangle {
                color: "#f0f0f0"  // ‚úÖ –°–≤–µ—Ç–ª–æ-—Å–µ—Ä—ã–π —Ñ–æ–Ω –¥–ª—è –∫–æ–Ω—Ç—Ä–∞—Å—Ç–∞
                border.color: "#bbb"
                border.width: 1
                radius: 5
            }

            // üåü –ò–∑–º–µ–Ω–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Å—Ç—Ä–∞–Ω—ã
            onCurrentIndexChanged: {
                const selected = model[currentIndex];
                root.selectedCountryCode = selected.code;
                root.selectedFlag = selected.flag;
                root.selectedCountryName = selected.name;
                countryFlag.source = selected.flag;

                // üöÄ –ü–µ—Ä–µ–¥–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
                root.countryChanged(selected.code, selected.flag);
                console.log("üåç Country selected:", selected.name, selected.code);
            }
        }
    }
}
